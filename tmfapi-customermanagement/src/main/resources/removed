public Map<String, String> javaObjectIterator(Class<?> dtoClass) {
        Map<String, String> fieldNameTypeMap = new HashMap<>();
        try {
            List<Field> fields = Arrays.asList(dtoClass.getDeclaredFields());
            fields.forEach(field -> {
                if (field.getType().getSimpleName().equals("List")) {
                    fieldNameTypeMap.put(field.getName(), getListType(dtoClass, field.getName()));
                } else {
                    fieldNameTypeMap.put(field.getName(), field.getType().getSimpleName());
                }
            });
        } catch (Exception ex) {
            logger.severe("error in java object iteration " + ExceptionUtils.getStackTrace(ex));
        }
        return fieldNameTypeMap;
    }

    private String getListType(Class<?> dtoClass, String fieldName) {
        try {
            Field listField = dtoClass.getDeclaredField(fieldName);
            ParameterizedType listType = (ParameterizedType) listField.getGenericType();
            Class<?> stringListClass = (Class<?>) listType.getActualTypeArguments()[0];
            return stringListClass.getSimpleName();
        } catch (Exception ex) {
            logger.severe("error in getting list type " + ExceptionUtils.getStackTrace(ex));
        }
        return "";
    }